# Lint, build, and test hippo on a push to main or a pull request

name: hippo-ci
permissions: read-all
on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    container:
      image: quay.io/ukaea/hippo:e61505f86052be9bb6a5

    steps:
    - uses: actions/checkout@v4
    - name: Quality Checks
      run: |
        # As we're running in our own container, we're not the same user as is
        # used by 'actions/checkout', so git operations fail.
        # https://github.com/actions/checkout/issues/766
        git config --global --add safe.directory "$GITHUB_WORKSPACE"
        git config --global --add safe.directory /opt/moose
        pre-commit install
        SKIP=no-commit-to-branch pre-commit run --all

    - name: Build
      shell: bash
      run: |
        # Copy the OpenFOAM configuration into the home directory. GitHub
        # overrides the home directory set in the docker image.
        mkdir -p ~/.OpenFOAM
        cp ./scripts/openfoam-prefs.sh ~/.OpenFOAM/prefs.sh

        # Initialise OpenFOAM
        . /opt/openfoam/OpenFOAM-12/etc/bashrc || true

        # Build hippo
        make -j

    - name: Test
      shell: bash
      run: |
        . /opt/openfoam/OpenFOAM-12/etc/bashrc || true
        unset FOAM_SIGFPE && unset FOAM_SETNAN
        ./run_tests

    - name: Docs
      shell: bash
      run: |
        . /opt/openfoam/OpenFOAM-12/etc/bashrc || true
        cd doc
        ./moosedocs.py build --destination=htmldoc
        [ -f htmldoc/index.html ]

    - name: Artifact docs
      id: deployment
      uses: actions/upload-pages-artifact@v3
      with:
        path: doc/htmldoc

  deploy-docs:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: build-test

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write

    # Allow only one concurrent deployment, skipping runs queued between the
    # run in-progress and latest queued.
    # However, do NOT cancel in-progress runs as we want to allow these
    # production deployments to complete.
    concurrency:
      group: "pages"
      cancel-in-progress: false

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
